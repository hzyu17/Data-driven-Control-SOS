function [t,x,y] = LTVsim(A,B,C,D,tSystem,x0,inputSignal,solver,solverOptions)
% LTVSIM Simulates a linear time variant system with ODE45 or ODE15S.
%   This function is used primarily as a utility function for WORSTCASE.
%
%   [T,X,Y] = LTVSIM(A,B,C,D,TSYS,X0,INPUT,SOLVER,SOLVEROPTIONS)  A 
%   linearization of the system is given by the 3D arrays A,B,C,D at each
%   point in time:
%
%       dx(k) = A(:,:,k)*x + B(:,:,k)*u 
%        y(k) = C(:,:,k)*x + C(:,:,k)*u   at t = TSYS(k)
%
%   The function LOCATE is used to linearly interpolate the values of
%   A,B,C,D between the discrete time points specified in TSYS.  Similarly,
%   the input signal INPUT = [tInput,uVec] is linearly interpolated between
%   the discrete values of tInput to find u.  SOLVER is a function handle
%   of the desired ODE solver (@ode45 or @ode15s) and SOLVEROPTIONS is a
%   structure generated by the command ODESET.  The simulation starts from
%   the initial conditions X0 and returns the simulation time vector T, the
%   values of the states X, and the output values Y.  Because the system is
%   only defined at the time points in TSYS, the outputs are sampled at the
%   same time points (i.e. T = TSYS).
%
% See also WORSTCASE, LOCATE, ODE45, ODE15S, ODESET

%% Seperate input signal
tInput = inputSignal(:,1);
u = inputSignal(:,2:end);

%% Call ode solver to simulate system
[t,x] = feval(solver,@localLTVsystem,tSystem,x0,solverOptions);

%% Nested local "odefun" allows access to @LTVsim workspace
    function dx = localLTVsystem(thisT,thisX)
        thisU = locate(thisT,tInput,u);
        [thisA,thisB] = locate(thisT,tInput,A,B);
        dx = thisA*thisX + thisB*thisU';
    end % End nested function

%% Calculate output, y
nOutputs = size(C,1);
y = zeros(length(t),nOutputs);
for j = 1:length(t)
    thisU = locate(t(j),tInput,u);
    [thisC,thisD] = locate(t(j),tSystem,C,D);
    y(j,1:nOutputs) = thisC * x(j,:)' + thisD * thisU';
end

end % End the outer function